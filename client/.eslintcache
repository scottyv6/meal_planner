[{"D:\\bootcampspot\\code\\meal-planner\\client\\src\\index.js":"1","D:\\bootcampspot\\code\\meal-planner\\client\\src\\App.js":"2","D:\\bootcampspot\\code\\meal-planner\\client\\src\\reportWebVitals.js":"3","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Login.js":"4","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Signup.js":"5","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Home.js":"6","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Header\\index.js":"7","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Footer\\index.js":"8","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\auth.js":"9","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\queries.js":"10","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\mutations.js":"11","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\index.js":"12","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\Scheduler.js":"13","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealList\\index.js":"14","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishList\\index.js":"15"},{"size":542,"mtime":1636012618349,"results":"16","hashOfConfig":"17"},{"size":1940,"mtime":1636450067235,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1635126990984,"results":"19","hashOfConfig":"17"},{"size":2503,"mtime":1635126990983,"results":"20","hashOfConfig":"17"},{"size":2658,"mtime":1635126990983,"results":"21","hashOfConfig":"17"},{"size":1166,"mtime":1636507017951,"results":"22","hashOfConfig":"17"},{"size":1306,"mtime":1636012176435,"results":"23","hashOfConfig":"17"},{"size":631,"mtime":1636021272427,"results":"24","hashOfConfig":"17"},{"size":1155,"mtime":1636456146483,"results":"25","hashOfConfig":"17"},{"size":592,"mtime":1636513835116,"results":"26","hashOfConfig":"17"},{"size":503,"mtime":1636077804039,"results":"27","hashOfConfig":"17"},{"size":90,"mtime":1636193691701,"results":"28","hashOfConfig":"17"},{"size":956,"mtime":1636193569665,"results":"29","hashOfConfig":"17"},{"size":909,"mtime":1636453097778,"results":"30","hashOfConfig":"17"},{"size":1169,"mtime":1636432580859,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10a62h",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"D:\\bootcampspot\\code\\meal-planner\\client\\src\\index.js",[],["67","68"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\App.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\reportWebVitals.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Login.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Signup.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Home.js",["69","70"],"import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useLazyQuery } from '@apollo/client';\r\n\r\nimport MealList from '../components/MealList'\r\nimport { QUERY_MEALS } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Meal = () => {\r\n  const { username: userParam } = useParams();\r\n\r\n  \r\n  const [ getMeals, { loading, data } ] = useLazyQuery(QUERY_MEALS);\r\n  console.log('data 1st try:', data);\r\n\r\n  if (!Auth.loggedIn()) {\r\n    return (\r\n      <main>\r\n        <div className=\"flex-row justify-center\">\r\n          Not logged in\r\n        </div>    \r\n      </main>\r\n    );\r\n  }\r\n\r\n  const authUserId = Auth.getUserId();\r\n  console.log(\"authUserId is\", authUserId);\r\n  \r\n  getMeals({\r\n    variables: { userId: authUserId },\r\n  });\r\n\r\n  const meals = data;\r\n  console.log('meals:', meals);\r\n  console.log('data:', data);\r\n  \r\n  \r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        meals in meal page\r\n        <MealList \r\n          meals={meals}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Meal;\r\n","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Header\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Footer\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\auth.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\queries.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\mutations.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\index.js",[],["71","72"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\Scheduler.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealList\\index.js",["73"],"import React from 'react';\r\nimport { Card, Button } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport DishList from '../DishList';\r\n\r\nconst MealList = ({ \r\n    meals,\r\n}) => {\r\n    // if (!meals.length) {\r\n    //     return <h3>You have not added any meals yet</h3>\r\n    // }\r\n\r\n    return (\r\n        \r\n        <Card>\r\n            {meals && \r\n                meals.map((meal) => (\r\n                    <>\r\n                        <Card.Header>Meal: {meal.mealType}\r\n                            <span> {meal.date}</span>\r\n                        </Card.Header>\r\n                        <Card.Content> \r\n                            <Button>Add Dish</Button>\r\n                            <DishList dishes={meal.dishes} />\r\n                        </Card.Content>\r\n                    </>\r\n                ))\r\n            }\r\n        </Card>\r\n       \r\n    )\r\n}\r\n\r\nexport default MealList;","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishList\\index.js",["74"],"import React from 'react';\r\nimport { Grid, Button } from 'semantic-ui-react'\r\n\r\nconst DishList = ({ dishes = [] }) => {\r\n  if (!dishes.length) {\r\n    return <h3>Click on Add Dish to add a dish</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-row my-4\">\r\n        {dishes && \r\n            dishes.map((dish) => (\r\n                <grid celled>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={3}>\r\n                            Dish: {dish.dishName}\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Button>Delete</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            Recipe Link: <a href={dish.recipeLink}>{dish.recipeLink}</a>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            Notes: {dish.notes}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </grid>\r\n            ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishList;\r\n\r\n\r\n{/* <h3>Dish{}: dish.name</h3> */}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":11,"column":21,"nodeType":"81","messageId":"82","endLine":11,"endColumn":30},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","replacedBy":"85"},{"ruleId":"79","severity":1,"message":"86","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":40,"column":1,"nodeType":"89","messageId":"90","endLine":40,"endColumn":35},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'userParam' is assigned a value but never used.",["91"],["92"],"'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]