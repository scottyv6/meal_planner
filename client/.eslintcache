[{"D:\\bootcampspot\\code\\meal-planner\\client\\src\\index.js":"1","D:\\bootcampspot\\code\\meal-planner\\client\\src\\App.js":"2","D:\\bootcampspot\\code\\meal-planner\\client\\src\\reportWebVitals.js":"3","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Login.js":"4","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Signup.js":"5","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Home.js":"6","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Header\\index.js":"7","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Footer\\index.js":"8","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\auth.js":"9","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\queries.js":"10","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\mutations.js":"11","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\index.js":"12","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\Scheduler.js":"13","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealList\\index.js":"14","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishList\\index.js":"15","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\AddMeal.js":"16","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealForm\\index.js":"17","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\AddDish.js":"18","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishForm\\index.js":"19"},{"size":310,"mtime":1638280096786,"results":"20","hashOfConfig":"21"},{"size":2057,"mtime":1638346916426,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1635126990984,"results":"23","hashOfConfig":"21"},{"size":2503,"mtime":1635126990983,"results":"24","hashOfConfig":"21"},{"size":2658,"mtime":1635126990983,"results":"25","hashOfConfig":"21"},{"size":1248,"mtime":1638264234229,"results":"26","hashOfConfig":"21"},{"size":1318,"mtime":1636816372791,"results":"27","hashOfConfig":"21"},{"size":631,"mtime":1636021272427,"results":"28","hashOfConfig":"21"},{"size":1163,"mtime":1636538913018,"results":"29","hashOfConfig":"21"},{"size":592,"mtime":1636513835116,"results":"30","hashOfConfig":"21"},{"size":1350,"mtime":1638754364074,"results":"31","hashOfConfig":"21"},{"size":90,"mtime":1636193691701,"results":"32","hashOfConfig":"33"},{"size":956,"mtime":1636193569665,"results":"34","hashOfConfig":"33"},{"size":1419,"mtime":1638614583888,"results":"35","hashOfConfig":"21"},{"size":1458,"mtime":1644827045739,"results":"36","hashOfConfig":"21"},{"size":295,"mtime":1638284964742,"results":"37","hashOfConfig":"21"},{"size":3989,"mtime":1638348718601,"results":"38","hashOfConfig":"21"},{"size":295,"mtime":1638285520575,"results":"39","hashOfConfig":"21"},{"size":2155,"mtime":1638348729409,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"co6hw1",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"10a62h",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"43"},"D:\\bootcampspot\\code\\meal-planner\\client\\src\\index.js",[],["84","85"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\App.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\reportWebVitals.js",[],["86","87"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Login.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Signup.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Home.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Header\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Footer\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\auth.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\queries.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\mutations.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\index.js",[],["88","89"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\Scheduler.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealList\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishList\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\AddMeal.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealForm\\index.js",["90"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\r\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\r\n\r\nimport { ADD_MEAL } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { Form, Button, Dropdown } from 'semantic-ui-react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst MealForm = ({ userId }) => {\r\n    \r\n\r\n    const mealOptions = [\r\n        {\r\n            key: 'Breakfast',\r\n            text: 'Breakfast',\r\n            value: 'Breakfast',\r\n        },\r\n        {\r\n            key: 'Lunch',\r\n            text: 'Lunch',\r\n            value: 'Lunch',\r\n        },\r\n        {\r\n            key: 'Dinner',\r\n            text: 'Dinner',\r\n            value: 'Dinner',\r\n        },\r\n    ]\r\n\r\n    const categories = [\r\n        {\r\n            key: 'Beef',\r\n            text: 'Beef',\r\n            value: 'Beef',\r\n        },\r\n        {\r\n            key: 'Chicken',\r\n            text: 'Chicken',\r\n            value: 'Chicken',\r\n        },\r\n        {\r\n            key: 'Pork',\r\n            text: 'Pork',\r\n            value: 'Pork',\r\n        },\r\n        {\r\n            key: 'Lamb',\r\n            text: 'Lamb',\r\n            value: 'Lamb',\r\n        },\r\n        {\r\n            key: 'Fish',\r\n            text: 'Fish',\r\n            value: 'Fish',\r\n        },\r\n        {\r\n            key: 'Seafood',\r\n            text: 'Seafood',\r\n            value: 'Seafood',\r\n        },\r\n        {\r\n            key: 'Vegetarian',\r\n            text: 'Vegetarian',\r\n            value: 'Vegetarian',\r\n        },\r\n        {\r\n            key: 'Other',\r\n            text: 'Other',\r\n            value: 'Other',\r\n        },\r\n    ]\r\n\r\n    let history = useHistory();\r\n\r\n    const [formState, setFormState] = useState({\r\n        mealType: '',\r\n        category: '',\r\n        date: '',\r\n    }); \r\n\r\n        const onChange = (event, data) => {\r\n        const { name, value } = data || event.target;        \r\n        setFormState({...formState, [name]: value});       \r\n\r\n    }\r\n\r\n    const [addMeal] = useMutation(ADD_MEAL);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();        \r\n        try {            \r\n            const { data } = await addMeal({\r\n            variables: {\r\n            ...formState,\r\n            userId: Auth.getProfile().data._id,            \r\n            },\r\n        });\r\n        history.push(\"/\")\r\n        } catch (err) {\r\n        console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleFormSubmit}>\r\n                <Form.Field name=\"date\"> \r\n                    <label>Date</label>\r\n                    \r\n                    <SemanticDatepicker  onChange={onChange} value={formState.date} name=\"date\" /> \r\n                </Form.Field>\r\n\r\n                <Form.Field  >\r\n                    <label>Meal Type</label>\r\n                    <Dropdown\r\n                        name=\"mealType\"\r\n                        label=\"Meal Type\"\r\n                        placeholder='Meal Type'\r\n                        fluid\r\n                        selection\r\n                        options={mealOptions}\r\n                        onChange={onChange}\r\n                        value={formState.mealType}\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field >\r\n                    <label>Meal Category</label>\r\n                    <Dropdown\r\n                        name=\"category\"\r\n                        placeholder='Meal Category'\r\n                        fluid\r\n                        selection\r\n                        options={categories}\r\n                        onChange={onChange}\r\n                        value={formState.category}\r\n                    />\r\n                </Form.Field>\r\n                <Button type='submit' to=\"/\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MealForm;","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\AddDish.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishForm\\index.js",["91"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_DISH } from '../../utils/mutations';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nconst DishForm = ({ userId }) => {\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n\r\n    const [formState, setFormState] = useState({\r\n        dishName: '',\r\n        recipeLink: '',\r\n        notes: '',\r\n    });    \r\n\r\n    const onChange = (event, data) => {\r\n        const { name, value } = data || event.target;        \r\n        setFormState({...formState, [name]: value});\r\n        console.log('name in onchange', name)\r\n        console.log('value in onchange', value)\r\n        console.log('formState in onchange', formState)\r\n    }\r\n\r\n    const [addDish] = useMutation(ADD_DISH);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();        \r\n        try {            \r\n            const { data } = await addDish({\r\n            variables: {\r\n            ...formState,\r\n            mealId: id,\r\n            },\r\n        });\r\n        history.push(\"/\")\r\n        } catch (err) {\r\n        console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleFormSubmit}>\r\n                <Form.Input \r\n                    name=\"dishName\"\r\n                    label=\"Dish Name\"\r\n                    onChange={onChange}\r\n                    value={formState.dishName}                \r\n                />\r\n\r\n                <Form.Input \r\n                    name=\"recipeLink\"\r\n                    label=\"Recipe Link\"\r\n                    onChange={onChange}\r\n                    value={formState.recipeLink}                \r\n                />\r\n\r\n                <Form.TextArea \r\n                    name=\"notes\"\r\n                    label=\"Notes\"\r\n                    onChange={onChange}\r\n                    value={formState.notes}                \r\n                />\r\n                \r\n                <Button type='submit' to=\"/\">Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DishForm;",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"92","replacedBy":"98"},{"ruleId":"94","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":96,"column":21,"nodeType":"102","messageId":"103","endLine":96,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":31,"column":21,"nodeType":"102","messageId":"103","endLine":31,"endColumn":25},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],["104"],["105"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]