[{"D:\\bootcampspot\\code\\meal-planner\\client\\src\\index.js":"1","D:\\bootcampspot\\code\\meal-planner\\client\\src\\App.js":"2","D:\\bootcampspot\\code\\meal-planner\\client\\src\\reportWebVitals.js":"3","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Login.js":"4","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Signup.js":"5","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Home.js":"6","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Header\\index.js":"7","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Footer\\index.js":"8","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\auth.js":"9","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\queries.js":"10","D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\mutations.js":"11","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\index.js":"12","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\Scheduler.js":"13","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealList\\index.js":"14","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishList\\index.js":"15","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\AddMeal.js":"16"},{"size":542,"mtime":1636012618349,"results":"17","hashOfConfig":"18"},{"size":1950,"mtime":1636638052736,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1635126990984,"results":"20","hashOfConfig":"18"},{"size":2503,"mtime":1635126990983,"results":"21","hashOfConfig":"18"},{"size":2658,"mtime":1635126990983,"results":"22","hashOfConfig":"18"},{"size":1715,"mtime":1636637731885,"results":"23","hashOfConfig":"18"},{"size":1273,"mtime":1636640259784,"results":"24","hashOfConfig":"18"},{"size":631,"mtime":1636021272427,"results":"25","hashOfConfig":"18"},{"size":1163,"mtime":1636538913018,"results":"26","hashOfConfig":"18"},{"size":592,"mtime":1636513835116,"results":"27","hashOfConfig":"18"},{"size":787,"mtime":1636521082037,"results":"28","hashOfConfig":"18"},{"size":90,"mtime":1636193691701,"results":"29","hashOfConfig":"18"},{"size":956,"mtime":1636193569665,"results":"30","hashOfConfig":"18"},{"size":1157,"mtime":1636617443785,"results":"31","hashOfConfig":"18"},{"size":1205,"mtime":1636611874048,"results":"32","hashOfConfig":"18"},{"size":366,"mtime":1636637948496,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"10a62h",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\bootcampspot\\code\\meal-planner\\client\\src\\index.js",[],["71","72"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\App.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\reportWebVitals.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Login.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Signup.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\Home.js",["73","74","75"],"import React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useLazyQuery, useQuery } from '@apollo/client';\r\n\r\nimport MealList from '../components/MealList'\r\nimport { QUERY_MEALS } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Home = () => {\r\n   \r\n  // const [ getMeals, { loading, data } ] = useLazyQuery(QUERY_MEALS);\r\n  // console.log('data 1st try:', data);\r\n\r\n  // if (!Auth.loggedIn()) {\r\n  //   return (\r\n  //     <main>\r\n  //       <div className=\"flex-row justify-center\">\r\n  //         Not logged in\r\n  //       </div>    \r\n  //     </main>\r\n  //   );\r\n  // }\r\n\r\n  // const authUserId = Auth.getUserId();\r\n  // console.log(\"authUserId is\", authUserId);\r\n  \r\n  // getMeals({\r\n  //   variables: { userId: authUserId },\r\n  // });\r\n\r\n  // const meals = data;\r\n  // console.log('meals:', meals);\r\n  // console.log('data:', data);\r\n  \r\n\r\n  const authUserId = Auth.loggedIn()? Auth.getUserId() : null;\r\n  //console.log(\"authUserId is\", authUserId);\r\n  // const authUserId = \"618cefeb91e5324d2429ed3b\"\r\n\r\n  const {loading, data} = useQuery (QUERY_MEALS,\r\n    {\r\n      variables: { userId: authUserId },\r\n    }\r\n  );\r\n\r\n  const meals = data?.meals || [];\r\n  console.log('meals:', meals);\r\n  console.log('data:', data);\r\n\r\n  if (!Auth.loggedIn()) {\r\n    return (\r\n      <main>\r\n        <div className=\"flex-row justify-center\">\r\n          Not logged in\r\n        </div>    \r\n      </main> \r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"flex-row justify-center\">\r\n        <MealList \r\n          meals={meals}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Header\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Footer\\index.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\auth.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\queries.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\utils\\mutations.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\index.js",[],["76","77"],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\Scheduler\\Scheduler.js",[],"D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\MealList\\index.js",["78"],"import React from 'react';\r\nimport { Card, Button, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport DishList from '../DishList';\r\n\r\nconst MealList = ({ \r\n    meals\r\n}) => {\r\n    if (!meals.length) {\r\n        console.log(\"meals in meallist\", meals);\r\n        console.log(\"meals.length\", meals.length);\r\n        return <h3>You have not added any meals yet</h3>\r\n    }\r\n    console.log('meals in meallist', meals);\r\n    return (\r\n        \r\n        <Grid>\r\n            {meals && \r\n                meals.map((meal) => (\r\n                    <div key={meal._id}>\r\n                        <Card.Header>Meal: {meal.mealType}\r\n                            <span> {new Date(meal.date).toDateString()}</span>\r\n                        </Card.Header>\r\n                        {console.log('meal in map', meal)}\r\n                        <Card.Content> \r\n                            <Button>Add Dish</Button>\r\n                            <DishList dishes={meal.dishes} />\r\n                        </Card.Content>\r\n                    </div>\r\n                ))\r\n            }\r\n        </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default MealList;","D:\\bootcampspot\\code\\meal-planner\\client\\src\\components\\DishList\\index.js",["79"],"import React from 'react';\r\nimport { Grid, Button } from 'semantic-ui-react'\r\n\r\nconst DishList = ({ dishes = [] }) => {\r\n  if (!dishes.length) {\r\n    return <h3>Click on Add Dish to add a dish</h3>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div >\r\n        {dishes && \r\n            dishes.map((dish) => (\r\n                <Grid celled key={dish._id? dish._id : Math.floor(Math.random() * 10000)}>\r\n                    <Grid.Row>\r\n                        <Grid.Column width={3}>\r\n                            Dish: {dish.dishName}\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            <Button>Delete</Button>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            Recipe Link: <a href={dish.recipeLink}>{dish.recipeLink}</a>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                            Notes: {dish.notes}\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DishList;\r\n\r\n\r\n{/* <h3>Dish{}: dish.name</h3> */}","D:\\bootcampspot\\code\\meal-planner\\client\\src\\pages\\AddMeal.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":10,"nodeType":"87","messageId":"88","endLine":2,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":2,"column":20,"nodeType":"87","messageId":"88","endLine":2,"endColumn":29},{"ruleId":"85","severity":1,"message":"90","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"81","replacedBy":"91"},{"ruleId":"83","replacedBy":"92"},{"ruleId":"85","severity":1,"message":"93","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"94","severity":1,"message":"95","line":40,"column":1,"nodeType":"96","messageId":"97","endLine":40,"endColumn":35},{"ruleId":"85","severity":1,"message":"98","line":8,"column":11,"nodeType":"87","messageId":"88","endLine":8,"endColumn":21},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useLazyQuery' is defined but never used.",["99"],["100"],"'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'authUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]